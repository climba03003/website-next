"use strict";(self.webpackChunkfastify_website=self.webpackChunkfastify_website||[]).push([[2165],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=l(n),d=o,h=f["".concat(p,".").concat(d)]||f[d]||u[d]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8663:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return f}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={title:"HTTP2",sidebar_label:"HTTP2",hide_title:!1},p=void 0,l={unversionedId:"HTTP2",id:"HTTP2",isDocsHomePage:!1,title:"HTTP2",description:"Fastify offers experimental support for HTTP2 starting from",source:"@site/docs/HTTP2.md",sourceDirName:".",slug:"/HTTP2",permalink:"/docs/v3/HTTP2",editUrl:"https://github.com/fastify/website-next/edit/main/docs/docs/HTTP2.md",tags:[],version:"current",frontMatter:{title:"HTTP2",sidebar_label:"HTTP2",hide_title:!1},sidebar:"sidebar",previous:{title:"Fluent Schema",permalink:"/docs/v3/Fluent-Schema"},next:{title:"Hooks",permalink:"/docs/v3/Hooks"}},c=[{value:"Secure (HTTPS)",id:"secure-https",children:[],level:3},{value:"Plain or insecure",id:"plain-or-insecure",children:[],level:3}],u={toc:c};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Fastify")," offers ",(0,a.kt)("strong",{parentName:"p"},"experimental support")," for HTTP2 starting from\nNode 8 LTS, which includes HTTP2 without a flag; HTTP2 is supported\nover either HTTPS or plaintext."),(0,a.kt)("p",null,"Currently, none of the HTTP2-specific APIs are available through\n",(0,a.kt)("em",{parentName:"p"},"Fastify"),", but Node's ",(0,a.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"res")," can be accessed through our\n",(0,a.kt)("inlineCode",{parentName:"p"},"Request")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Reply")," interface. PRs are welcome."),(0,a.kt)("h3",{id:"secure-https"},"Secure (HTTPS)"),(0,a.kt)("p",null,"HTTP2 is supported in all modern browsers ",(0,a.kt)("strong",{parentName:"p"},"only over a secure\nconnection"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\nconst fastify = require('fastify')({\n  http2: true,\n  https: {\n    key: fs.readFileSync(path.join(__dirname, '..', 'https', 'fastify.key')),\n    cert: fs.readFileSync(path.join(__dirname, '..', 'https', 'fastify.cert'))\n  }\n})\n\nfastify.get('/', function (request, reply) {\n  reply.code(200).send({ hello: 'world' })\n})\n\nfastify.listen(3000)\n")),(0,a.kt)("p",null,"ALPN negotiation allows support for both HTTPS and HTTP/2 over the same socket.\nNode core ",(0,a.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"res")," objects can be either ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html"},"HTTP/1"),"\nor ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http2.html"},"HTTP/2"),".\n",(0,a.kt)("em",{parentName:"p"},"Fastify")," supports this out of the box:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\nconst fastify = require('fastify')({\n  http2: true,\n  https: {\n    allowHTTP1: true, // fallback support for HTTP1\n    key: fs.readFileSync(path.join(__dirname, '..', 'https', 'fastify.key')),\n    cert: fs.readFileSync(path.join(__dirname, '..', 'https', 'fastify.cert'))\n  }\n})\n\n// this route can be accessed through both protocols\nfastify.get('/', function (request, reply) {\n  reply.code(200).send({ hello: 'world' })\n})\n\nfastify.listen(3000)\n")),(0,a.kt)("p",null,"You can test your new server with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ npx h2url https://localhost:3000\n")),(0,a.kt)("h3",{id:"plain-or-insecure"},"Plain or insecure"),(0,a.kt)("p",null,"If you are building microservices, you can connect to HTTP2 in plain\ntext, however, this is not supported by browsers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"'use strict'\n\nconst fastify = require('fastify')({\n  http2: true\n})\n\nfastify.get('/', function (request, reply) {\n  reply.code(200).send({ hello: 'world' })\n})\n\nfastify.listen(3000)\n")),(0,a.kt)("p",null,"You can test your new server with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ npx h2url http://localhost:3000\n")))}f.isMDXComponent=!0}}]);