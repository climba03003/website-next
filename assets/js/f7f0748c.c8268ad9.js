"use strict";(self.webpackChunk_fastify_website=self.webpackChunk_fastify_website||[]).push([[94590],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(f,s(s({ref:t},d),{},{components:n})):a.createElement(f,s({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},51858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={},s=void 0,o={unversionedId:"Documentation/Middlewares",id:"version-v1.14.x/Documentation/Middlewares",title:"Middlewares",description:"Middlewares",source:"@site/versioned_docs/version-v1.14.x/Documentation/Middlewares.md",sourceDirName:"Documentation",slug:"/Documentation/Middlewares",permalink:"/website-next/docs/v1.14.x/Documentation/Middlewares",draft:!1,tags:[],version:"v1.14.x",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Logging",permalink:"/website-next/docs/v1.14.x/Documentation/Logging"},next:{title:"The hitchhiker's guide to plugins",permalink:"/website-next/docs/v1.14.x/Documentation/Plugins-Guide"}},p={},l=[{value:"Middlewares",id:"middlewares",level:2},{value:"Restrict middleware execution to a certain path(s)",id:"restrict-middleware-execution-to-a-certain-paths",level:4}],d={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"middlewares"},"Middlewares"),(0,r.kt)("p",null,"Fastify out of the box provides an asynchronous ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fastify/middie"},"middleware engine")," compatible with ",(0,r.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," and ",(0,r.kt)("a",{parentName:"p",href:"http://restify.com/"},"Restify")," middlewares."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"If you need a visual feedback to understand when the middlewares are executed take a look to the ",(0,r.kt)("a",{parentName:"em",href:"https://github.com/fastify/fastify/blob/master/docs/Lifecycle.md"},"lifecycle")," page.")),(0,r.kt)("p",null,"Fastify middlewares don't support the full syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"middleware(err, req, res, next)"),", because error handling is done inside Fastify.\nFurthermore methods added by Express and Restify to the enhanced versions of ",(0,r.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"res")," are not supported in Fastify middlewares."),(0,r.kt)("p",null,"Also, if you are using a middleware that bundles different, smaller middlewares, such as ",(0,r.kt)("a",{parentName:"p",href:"https://helmetjs.github.io/"},(0,r.kt)("em",{parentName:"a"},"helmet")),", we recommend to use the single modules to get better performances."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.use(require('cors')())\nfastify.use(require('dns-prefetch-control')())\nfastify.use(require('frameguard')())\nfastify.use(require('hide-powered-by')())\nfastify.use(require('hsts')())\nfastify.use(require('ienoopen')())\nfastify.use(require('x-xss-protection')())\n\n")),(0,r.kt)("p",null,"or, in the specific case of ",(0,r.kt)("em",{parentName:"p"},"helmet"),", you can use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-helmet"},(0,r.kt)("em",{parentName:"a"},"fastify-helmet"))," ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v1.14.x/Documentation/Plugins"},"plugin"),", which is an optimized helmet integration for fastify:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fastify = require('fastify')()\nconst helmet = require('fastify-helmet')\n\nfastify.register(helmet)\n\n")),(0,r.kt)("p",null,"Remember that middlewares can be encapsulated, this means that you can decide where your middlewares should run by using ",(0,r.kt)("inlineCode",{parentName:"p"},"register")," as explained in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify/blob/master/docs/Plugins-Guide.md"},"plugins guide"),"."),(0,r.kt)("p",null,"Fastify middlewares also do not expose the ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," method or other methods specific to the Fastify ",(0,r.kt)("a",{parentName:"p",href:"'./Reply.md'",title:"Reply"},"Reply")," instance. This is because Fastify wraps the incoming ",(0,r.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"res")," Node instances using the ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v1.14.x/Documentation/Request",title:"Request"},"Request")," and ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v1.14.x/Documentation/Reply",title:"Reply"},"Reply")," objects internally, but this is done after the middlewares phase. If you need to create a middleware you have to use the Node ",(0,r.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"res")," instances. Otherwise, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"preHandler")," hook that has the ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v1.14.x/Documentation/Request",title:"Request"},"Request")," and ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v1.14.x/Documentation/Reply",title:"Reply"},"Reply")," Fastify instances. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v1.14.x/Documentation/Hooks",title:"Hooks"},"Hooks"),"."),(0,r.kt)("a",{name:"restrict-usage"}),(0,r.kt)("h4",{id:"restrict-middleware-execution-to-a-certain-paths"},"Restrict middleware execution to a certain path(s)"),(0,r.kt)("p",null,"If you need to run a middleware only under certain path(s), just pass the path as first parameter to ",(0,r.kt)("inlineCode",{parentName:"p"},"use")," and you are done!"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note that this does not support routes with parameters, (eg: ",(0,r.kt)("inlineCode",{parentName:"em"},"/user/:id/comments"),") and wildcard is not supported in multiple paths.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const path = require('path')\nconst serveStatic = require('serve-static')\n\n// Single path\nfastify.use('/css', serveStatic(path.join(__dirname, '/assets')))\n\n// Wildcard path\nfastify.use('/css/*', serveStatic(path.join(__dirname, '/assets')))\n\n// Multiple paths\nfastify.use(['/css', '/js'], serveStatic(path.join(__dirname, '/assets')))\n\n")))}u.isMDXComponent=!0}}]);