"use strict";(self.webpackChunkfastify_website=self.webpackChunkfastify_website||[]).push([[5308],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),c=p(n),f=a,m=c["".concat(d,".").concat(f)]||c[f]||u[f]||i;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2175:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return l},default:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=["components"],o={title:"Middlewares",sidebar_label:"Middlewares",hide_title:!1},d=void 0,p={unversionedId:"Middlewares",id:"version-v1/Middlewares",isDocsHomePage:!1,title:"Middlewares",description:"Fastify out of the box provides an asynchronous middleware engine compatible with Express and Restify middlewares.",source:"@site/versioned_docs/version-v1/Middlewares.md",sourceDirName:".",slug:"/Middlewares",permalink:"/website-next/docs/v1/Middlewares",editUrl:"https://github.com/fastify/website-next/edit/main/docs/versioned_docs/version-v1/Middlewares.md",tags:[],version:"v1",frontMatter:{title:"Middlewares",sidebar_label:"Middlewares",hide_title:!1},sidebar:"version-v1/sidebar",previous:{title:"Logging",permalink:"/website-next/docs/v1/Logging"},next:{title:"Plugins Guide",permalink:"/website-next/docs/v1/Plugins-Guide"}},l=[{value:"Restrict middleware execution to a certain path(s)",id:"restrict-middleware-execution-to-a-certain-paths",children:[],level:4}],u={toc:l};function c(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Fastify out of the box provides an asynchronous ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fastify/middie"},"middleware engine")," compatible with ",(0,i.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," and ",(0,i.kt)("a",{parentName:"p",href:"http://restify.com/"},"Restify")," middlewares."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"If you need a visual feedback to understand when the middlewares are executed take a look to the ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/fastify/fastify/blob/master/docs/Lifecycle.md"},"lifecycle")," page.")),(0,i.kt)("p",null,"Fastify middlewares don't support the full syntax ",(0,i.kt)("inlineCode",{parentName:"p"},"middleware(err, req, res, next)"),", because error handling is done inside Fastify.\nFurthermore methods added by Express and Restify to the enhanced versions of ",(0,i.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"res")," are not supported in Fastify middlewares."),(0,i.kt)("p",null,"Also, if you are using a middleware that bundles different, smaller middlewares, such as ",(0,i.kt)("a",{parentName:"p",href:"https://helmetjs.github.io/"},(0,i.kt)("em",{parentName:"a"},"helmet")),", we recommend to use the single modules to get better performances."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"fastify.use(require('cors')())\nfastify.use(require('dns-prefetch-control')())\nfastify.use(require('frameguard')())\nfastify.use(require('hide-powered-by')())\nfastify.use(require('hsts')())\nfastify.use(require('ienoopen')())\nfastify.use(require('x-xss-protection')())\n")),(0,i.kt)("p",null,"or, in the specific case of ",(0,i.kt)("em",{parentName:"p"},"helmet"),", you can use the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-helmet"},(0,i.kt)("em",{parentName:"a"},"fastify-helmet"))," ",(0,i.kt)("a",{parentName:"p",href:"/website-next/docs/v1/Plugins"},"plugin"),", which is an optimized helmet integration for fastify:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const fastify = require('fastify')()\nconst helmet = require('fastify-helmet')\n\nfastify.register(helmet)\n")),(0,i.kt)("p",null,"Remember that middlewares can be encapsulated, this means that you can decide where your middlewares should run by using ",(0,i.kt)("inlineCode",{parentName:"p"},"register")," as explained in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify/blob/master/docs/Plugins-Guide.md"},"plugins guide"),"."),(0,i.kt)("p",null,"Fastify middlewares also do not expose the ",(0,i.kt)("inlineCode",{parentName:"p"},"send")," method or other methods specific to the Fastify ",(0,i.kt)("a",{parentName:"p",href:"/website-next/docs/v1/Reply"},"Reply")," instance. This is because Fastify wraps the incoming ",(0,i.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"res")," Node instances using the ",(0,i.kt)("a",{parentName:"p",href:"/website-next/docs/v1/Request"},"Request")," and ",(0,i.kt)("a",{parentName:"p",href:"/website-next/docs/v1/Reply"},"Reply")," objects internally, but this is done after the middlewares phase. If you need to create a middleware you have to use the Node ",(0,i.kt)("inlineCode",{parentName:"p"},"req")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"res")," instances. Otherwise, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"preHandler")," hook that has the ",(0,i.kt)("a",{parentName:"p",href:"/website-next/docs/v1/Request"},"Request")," and ",(0,i.kt)("a",{parentName:"p",href:"/website-next/docs/v1/Reply"},"Reply")," Fastify instances. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/website-next/docs/v1/Hooks"},"Hooks"),"."),(0,i.kt)("h4",{id:"restrict-middleware-execution-to-a-certain-paths"},"Restrict middleware execution to a certain path(s)"),(0,i.kt)("a",{name:"restrict-usage"}),(0,i.kt)("p",null,"If you need to run a middleware only under certain path(s), just pass the path as first parameter to ",(0,i.kt)("inlineCode",{parentName:"p"},"use")," and you are done!"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Note that this does not support routes with parameters, (eg: ",(0,i.kt)("inlineCode",{parentName:"em"},"/user/:id/comments"),") and wildcard is not supported in multiple paths.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const path = require('path')\nconst serveStatic = require('serve-static')\n\n// Single path\nfastify.use('/css', serveStatic(path.join(__dirname, '/assets')))\n\n// Wildcard path\nfastify.use('/css/*', serveStatic(path.join(__dirname, '/assets')))\n\n// Multiple paths\nfastify.use(['/css', '/js'], serveStatic(path.join(__dirname, '/assets')))\n")))}c.isMDXComponent=!0}}]);