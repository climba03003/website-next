"use strict";(self.webpackChunk_fastify_website=self.webpackChunk_fastify_website||[]).push([[57352],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95343:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"Reference/Request",id:"version-v4.0.x/Reference/Request",title:"Request",description:"Request",source:"@site/versioned_docs/version-v4.0.x/Reference/Request.md",sourceDirName:"Reference",slug:"/Reference/Request",permalink:"/website-next/docs/v4.0.x/Reference/Request",draft:!1,editUrl:"https://github.com/fastify/fastify/edit/main/docs/Reference/Request.md",tags:[],version:"v4.0.x",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Reply",permalink:"/website-next/docs/v4.0.x/Reference/Reply"},next:{title:"Routes",permalink:"/website-next/docs/v4.0.x/Reference/Routes"}},s={},u=[{value:"Request",id:"request",level:2},{value:"Headers",id:"headers",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)("p",null,"The first parameter of the handler function is ",(0,a.kt)("inlineCode",{parentName:"p"},"Request"),"."),(0,a.kt)("p",null,"Request is a core Fastify object containing the following fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"query")," - the parsed querystring, its format is specified by\n",(0,a.kt)("a",{parentName:"li",href:"/website-next/docs/v4.0.x/Reference/Server#querystringparser"},(0,a.kt)("inlineCode",{parentName:"a"},"querystringParser"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"body")," - the request payload, see ",(0,a.kt)("a",{parentName:"li",href:"/website-next/docs/v4.0.x/Reference/ContentTypeParser"},"Content-Type\nParser")," for details on what request payloads Fastify\nnatively parses and how to support other content types"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"params")," - the params matching the URL"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#headers"},(0,a.kt)("inlineCode",{parentName:"a"},"headers"))," - the headers getter and setter"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"raw")," - the incoming HTTP request from Node core"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"server")," - The Fastify server instance, scoped to the current ",(0,a.kt)("a",{parentName:"li",href:"/website-next/docs/v4.0.x/Reference/Encapsulation"},"encapsulation\ncontext")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"id")," - the request ID"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"log")," - the logger instance of the incoming request"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ip")," - the IP address of the incoming request"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ips")," - an array of the IP addresses, ordered from closest to furthest, in the\n",(0,a.kt)("inlineCode",{parentName:"li"},"X-Forwarded-For")," header of the incoming request (only when the\n",(0,a.kt)("a",{parentName:"li",href:"/website-next/docs/v4.0.x/Reference/Server#factory-trust-proxy"},(0,a.kt)("inlineCode",{parentName:"a"},"trustProxy"))," option is enabled)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"hostname")," - the host of the incoming request (derived from ",(0,a.kt)("inlineCode",{parentName:"li"},"X-Forwarded-Host"),"\nheader when the ",(0,a.kt)("a",{parentName:"li",href:"/website-next/docs/v4.0.x/Reference/Server#factory-trust-proxy"},(0,a.kt)("inlineCode",{parentName:"a"},"trustProxy"))," option is\nenabled). For HTTP/2 compatibility it returns ",(0,a.kt)("inlineCode",{parentName:"li"},":authority")," if no host header\nexists."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"protocol")," - the protocol of the incoming request (",(0,a.kt)("inlineCode",{parentName:"li"},"https")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"http"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"method")," - the method of the incoming request"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"url")," - the URL of the incoming request"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routerMethod")," - the method defined for the router that is handling the\nrequest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"routerPath")," - the path pattern defined for the router that is handling the\nrequest"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"is404")," - true if request is being handled by 404 handler, false if it is not"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"connection")," - Deprecated, use ",(0,a.kt)("inlineCode",{parentName:"li"},"socket")," instead. The underlying connection of\nthe incoming request."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"socket")," - the underlying connection of the incoming request"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context")," - A Fastify internal object. You should not use it directly or\nmodify it. It is useful to access one special key:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context.config")," - The route ",(0,a.kt)("a",{parentName:"li",href:"/website-next/docs/v4.0.x/Reference/Routes#routes-config"},(0,a.kt)("inlineCode",{parentName:"a"},"config"))," object.")))),(0,a.kt)("h3",{id:"headers"},"Headers"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"request.headers")," is a getter that returns an Object with the headers of the\nincoming request. You can set custom headers like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"request.headers = {\n  'foo': 'bar',\n  'baz': 'qux'\n}\n")),(0,a.kt)("p",null,"This operation will add to the request headers the new values that can be read\ncalling ",(0,a.kt)("inlineCode",{parentName:"p"},"request.headers.bar"),". Moreover, you can still access the standard\nrequest's headers with the ",(0,a.kt)("inlineCode",{parentName:"p"},"request.raw.headers")," property."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: For performance reason on ",(0,a.kt)("inlineCode",{parentName:"p"},"not found")," route, you may see that we will\nadd an extra property ",(0,a.kt)("inlineCode",{parentName:"p"},"Symbol('fastify.RequestAcceptVersion')")," on the headers.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"fastify.post('/:params', options, function (request, reply) {\n  console.log(request.body)\n  console.log(request.query)\n  console.log(request.params)\n  console.log(request.headers)\n  console.log(request.raw)\n  console.log(request.server)\n  console.log(request.id)\n  console.log(request.ip)\n  console.log(request.ips)\n  console.log(request.hostname)\n  console.log(request.protocol)\n  console.log(request.url)\n  console.log(request.routerMethod)\n  console.log(request.routerPath)\n  request.log.info('some info')\n})\n")))}c.isMDXComponent=!0}}]);