"use strict";(self.webpackChunk_fastify_website=self.webpackChunk_fastify_website||[]).push([[17621],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return a?n.createElement(h,l(l({ref:t},d),{},{components:a})):n.createElement(h,l({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},34319:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={},l=void 0,o={unversionedId:"Reference/Reply",id:"version-v4.8.x/Reference/Reply",title:"Reply",description:"Reply",source:"@site/versioned_docs/version-v4.8.x/Reference/Reply.md",sourceDirName:"Reference",slug:"/Reference/Reply",permalink:"/website-next/docs/v4.8.x/Reference/Reply",draft:!1,editUrl:"https://github.com/fastify/fastify/edit/main/docs/Reference/Reply.md",tags:[],version:"v4.8.x",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Plugins",permalink:"/website-next/docs/v4.8.x/Reference/Plugins"},next:{title:"Request",permalink:"/website-next/docs/v4.8.x/Reference/Request"}},s={},p=[{value:"Reply",id:"reply",level:2},{value:"Introduction",id:"introduction",level:3},{value:".code(statusCode)",id:"codestatuscode",level:3},{value:".statusCode",id:"statuscode",level:3},{value:".server",id:"server",level:3},{value:".header(key, value)",id:"headerkey-value",level:3},{value:".headers(object)",id:"headersobject",level:3},{value:".getHeader(key)",id:"getheaderkey",level:3},{value:".getHeaders()",id:"getheaders",level:3},{value:".removeHeader(key)",id:"removeheaderkey",level:3},{value:".hasHeader(key)",id:"hasheaderkey",level:3},{value:".trailer(key, function)",id:"trailerkey-function",level:3},{value:".hasTrailer(key)",id:"hastrailerkey",level:3},{value:".removeTrailer(key)",id:"removetrailerkey",level:3},{value:".redirect(code , dest)",id:"redirectcode--dest",level:3},{value:".callNotFound()",id:"callnotfound",level:3},{value:".getResponseTime()",id:"getresponsetime",level:3},{value:".type(contentType)",id:"typecontenttype",level:3},{value:".getSerializationFunction(schema | httpStatus)",id:"getserializationfunctionschema--httpstatus",level:3},{value:".compileSerializationSchema(schema, httpStatus)",id:"compileserializationschemaschema-httpstatus",level:3},{value:".serializeInput(data, schema | httpStatus, httpStatus)",id:"serializeinputdata-schema--httpstatus-httpstatus",level:3},{value:".serializer(func)",id:"serializerfunc",level:3},{value:".raw",id:"raw",level:3},{value:".sent",id:"sent",level:3},{value:".send(data)",id:"senddata",level:3},{value:"Objects",id:"objects",level:4},{value:"Strings",id:"strings",level:4},{value:"Streams",id:"streams",level:4},{value:"Buffers",id:"buffers",level:4},{value:"Errors",id:"errors",level:4},{value:"Type of the final payload",id:"type-of-the-final-payload",level:4},{value:"Async-Await and Promises",id:"async-await-and-promises",level:4},{value:".then(fulfilled, rejected)",id:"thenfulfilled-rejected",level:3}],d={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"reply"},"Reply"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#reply"},"Reply"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#introduction"},"Introduction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#codestatuscode"},".code(statusCode)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#statuscode"},".statusCode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#server"},".server")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#headerkey-value"},".header(key, value)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#headersobject"},".headers(object)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#getheaderkey"},".getHeader(key)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#getheaders"},".getHeaders()"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#set-cookie"},"set-cookie")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removeheaderkey"},".removeHeader(key)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#hasheaderkey"},".hasHeader(key)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#trailerkey-function"},".trailer(key, function)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#hastrailerkey"},".hasTrailer(key)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removetrailerkey"},".removeTrailer(key)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#redirectcode--dest"},".redirect([code ,] dest)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#callnotfound"},".callNotFound()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#getresponsetime"},".getResponseTime()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#typecontenttype"},".type(contentType)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#getserializationfunctionschema--httpstatus"},".getSerializationFunction(schema | httpStatus)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#compileserializationschemaschema-httpstatus"},".compileSerializationSchema(schema, httpStatus)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#serializeinputdata-schema--httpstatus-httpstatus"},".serializeInput(data, [schema | httpStatus], [httpStatus])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#serializerfunc"},".serializer(func)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#raw"},".raw")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sent"},".sent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#hijack"},".hijack()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#senddata"},".send(data)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#objects"},"Objects")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#strings"},"Strings")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#streams"},"Streams")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#buffers"},"Buffers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#errors"},"Errors")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#type-of-the-final-payload"},"Type of the final payload")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#async-await-and-promises"},"Async-Await and Promises")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#thenfulfilled-rejected"},".then(fulfilled, rejected)"))))),(0,r.kt)("h3",{id:"introduction"},"Introduction"),(0,r.kt)("a",{id:"introduction"}),(0,r.kt)("p",null,"The second parameter of the handler function is ",(0,r.kt)("inlineCode",{parentName:"p"},"Reply"),". Reply is a core Fastify\nobject that exposes the following functions and properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".code(statusCode)")," - Sets the status code."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".status(statusCode)")," - An alias for ",(0,r.kt)("inlineCode",{parentName:"li"},".code(statusCode)"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".statusCode")," - Read and set the HTTP status code."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".server")," - A reference to the fastify instance object."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".header(name, value)")," - Sets a response header."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".headers(object)")," - Sets all the keys of the object as response headers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".getHeader(name)")," - Retrieve value of already set header."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".getHeaders()")," - Gets a shallow copy of all current response headers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".removeHeader(key)")," - Remove the value of a previously set header."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".hasHeader(name)")," - Determine if a header has been set."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".trailer(key, function)")," - Sets a response trailer."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".hasTrailer(key)")," - Determine if a trailer has been set."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".removeTrailer(key)")," - Remove the value of a previously set trailer."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".type(value)")," - Sets the header ",(0,r.kt)("inlineCode",{parentName:"li"},"Content-Type"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".redirect([code,] dest)")," - Redirect to the specified url, the status code is\noptional (default to ",(0,r.kt)("inlineCode",{parentName:"li"},"302"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".callNotFound()")," - Invokes the custom not found handler."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".serialize(payload)")," - Serializes the specified payload using the default\nJSON serializer or using the custom serializer (if one is set) and returns the\nserialized payload."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".getSerializationFunction(schema | httpStatus)")," - Returns the serialization\nfunction for the specified schema or http status, if any of either are set."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".compileSerializationSchema(schema, httpStatus)")," - Compiles the specified\nschema and returns a serialization function using the default (or customized)\n",(0,r.kt)("inlineCode",{parentName:"li"},"SerializerCompiler"),". The optional ",(0,r.kt)("inlineCode",{parentName:"li"},"httpStatus")," is forwarded to the\n",(0,r.kt)("inlineCode",{parentName:"li"},"SerializerCompiler")," if provided, default to ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".serializeInput(data, schema, [,httpStatus])")," - Serializes the specified data\nusing the specified schema and returns the serialized payload.\nIf the optional ",(0,r.kt)("inlineCode",{parentName:"li"},"httpStatus")," is provided, the function will use the serializer\nfunction given for that HTTP Status Code. Default to ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".serializer(function)")," - Sets a custom serializer for the payload."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".send(payload)")," - Sends the payload to the user, could be a plain text, a\nbuffer, JSON, stream, or an Error object."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".sent")," - A boolean value that you can use if you need to know if ",(0,r.kt)("inlineCode",{parentName:"li"},"send")," has\nalready been called."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".hijack()")," - interrupt the normal request lifecycle."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".raw")," - The\n",(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/dist/latest-v14.x/docs/api/http.html#http_class_http_serverresponse"},(0,r.kt)("inlineCode",{parentName:"a"},"http.ServerResponse")),"\nfrom Node core."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".log")," - The logger instance of the incoming request."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".request")," - The incoming request."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".context")," - Access the ",(0,r.kt)("a",{parentName:"li",href:"/website-next/docs/v4.8.x/Reference/Request"},"Request's context")," property.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/', options, function (request, reply) {\n  // Your code\n  reply\n    .code(200)\n    .header('Content-Type', 'application/json; charset=utf-8')\n    .send({ hello: 'world' })\n})\n")),(0,r.kt)("p",null,"Additionally, ",(0,r.kt)("inlineCode",{parentName:"p"},"Reply")," provides access to the context of the request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/', {config: {foo: 'bar'}}, function (request, reply) {\n  reply.send('handler config.foo = ' + reply.context.config.foo)\n})\n")),(0,r.kt)("h3",{id:"codestatuscode"},".code(statusCode)"),(0,r.kt)("a",{id:"code"}),(0,r.kt)("p",null,"If not set via ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.code"),", the resulting ",(0,r.kt)("inlineCode",{parentName:"p"},"statusCode")," will be ",(0,r.kt)("inlineCode",{parentName:"p"},"200"),"."),(0,r.kt)("h3",{id:"statuscode"},".statusCode"),(0,r.kt)("a",{id:"statusCode"}),(0,r.kt)("p",null,"This property reads and sets the HTTP status code. It is an alias for\n",(0,r.kt)("inlineCode",{parentName:"p"},"reply.code()")," when used as a setter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"if (reply.statusCode >= 299) {\n  reply.statusCode = 500\n}\n")),(0,r.kt)("h3",{id:"server"},".server"),(0,r.kt)("a",{id:"server"}),(0,r.kt)("p",null,"The Fastify server instance, scoped to the current ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v4.8.x/Reference/Encapsulation"},"encapsulation\ncontext"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.decorate('util', function util () {\n  return 'foo'\n})\n\nfastify.get('/', async function (req, rep) {\n  return rep.server.util() // foo\n})\n")),(0,r.kt)("h3",{id:"headerkey-value"},".header(key, value)"),(0,r.kt)("a",{id:"header"}),(0,r.kt)("p",null,"Sets a response header. If the value is omitted or undefined, it is coerced to\n",(0,r.kt)("inlineCode",{parentName:"p"},"''"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: the header's value must be properly encoded using\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI"},(0,r.kt)("inlineCode",{parentName:"a"},"encodeURI")),"\nor similar modules such as\n",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/encodeurl"},(0,r.kt)("inlineCode",{parentName:"a"},"encodeurl")),". Invalid characters\nwill result in a 500 ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeError")," response.")),(0,r.kt)("p",null,"For more information, see\n",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v14.x/docs/api/http.html#http_response_setheader_name_value"},(0,r.kt)("inlineCode",{parentName:"a"},"http.ServerResponse#setHeader")),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"set-cookie"},"set-cookie"),(0,r.kt)("a",{id:"set-cookie"}),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When sending different values as a cookie with ",(0,r.kt)("inlineCode",{parentName:"p"},"set-cookie")," as the key,\nevery value will be sent as a cookie instead of replacing the previous\nvalue."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.header('set-cookie', 'foo');\nreply.header('set-cookie', 'bar');\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The browser will only consider the latest reference of a key for the\n",(0,r.kt)("inlineCode",{parentName:"p"},"set-cookie")," header. This is done to avoid parsing the ",(0,r.kt)("inlineCode",{parentName:"p"},"set-cookie")," header\nwhen added to a reply and speeds up the serialization of the reply.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"To reset the ",(0,r.kt)("inlineCode",{parentName:"p"},"set-cookie")," header, you need to make an explicit call to\n",(0,r.kt)("inlineCode",{parentName:"p"},"reply.removeHeader('set-cookie')"),", read more about ",(0,r.kt)("inlineCode",{parentName:"p"},".removeHeader(key)"),"\n",(0,r.kt)("a",{parentName:"p",href:"#removeheaderkey"},"here"),"."))))),(0,r.kt)("h3",{id:"headersobject"},".headers(object)"),(0,r.kt)("a",{id:"headers"}),(0,r.kt)("p",null,"Sets all the keys of the object as response headers.\n",(0,r.kt)("a",{parentName:"p",href:"#headerkey-value"},(0,r.kt)("inlineCode",{parentName:"a"},".header"))," will be called under the hood."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.headers({\n  'x-foo': 'foo',\n  'x-bar': 'bar'\n})\n")),(0,r.kt)("h3",{id:"getheaderkey"},".getHeader(key)"),(0,r.kt)("a",{id:"getHeader"}),(0,r.kt)("p",null,"Retrieves the value of a previously set header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.header('x-foo', 'foo') // setHeader: key, value\nreply.getHeader('x-foo') // 'foo'\n")),(0,r.kt)("h3",{id:"getheaders"},".getHeaders()"),(0,r.kt)("a",{id:"getHeaders"}),(0,r.kt)("p",null,"Gets a shallow copy of all current response headers, including those set via the\nraw ",(0,r.kt)("inlineCode",{parentName:"p"},"http.ServerResponse"),". Note that headers set via Fastify take precedence\nover those set via ",(0,r.kt)("inlineCode",{parentName:"p"},"http.ServerResponse"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.header('x-foo', 'foo')\nreply.header('x-bar', 'bar')\nreply.raw.setHeader('x-foo', 'foo2')\nreply.getHeaders() // { 'x-foo': 'foo', 'x-bar': 'bar' }\n")),(0,r.kt)("h3",{id:"removeheaderkey"},".removeHeader(key)"),(0,r.kt)("a",{id:"getHeader"}),(0,r.kt)("p",null,"Remove the value of a previously set header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.header('x-foo', 'foo')\nreply.removeHeader('x-foo')\nreply.getHeader('x-foo') // undefined\n")),(0,r.kt)("h3",{id:"hasheaderkey"},".hasHeader(key)"),(0,r.kt)("a",{id:"hasHeader"}),(0,r.kt)("p",null,"Returns a boolean indicating if the specified header has been set."),(0,r.kt)("h3",{id:"trailerkey-function"},".trailer(key, function)"),(0,r.kt)("a",{id:"trailer"}),(0,r.kt)("p",null,"Sets a response trailer. Trailer is usually used when you need a header that\nrequires heavy resources to be sent after the ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),", for example,\n",(0,r.kt)("inlineCode",{parentName:"p"},"Server-Timing")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Etag"),". It can ensure the client receives the response data\nas soon as possible."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: The header ",(0,r.kt)("inlineCode",{parentName:"em"},"Transfer-Encoding: chunked")," will be added once you use the\ntrailer. It is a hard requirement for using trailer in Node.js.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: Currently, the computation function only supports synchronous function.\nThat means ",(0,r.kt)("inlineCode",{parentName:"em"},"async-await")," and ",(0,r.kt)("inlineCode",{parentName:"em"},"promise")," are not supported.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.trailer('server-timing', function() {\n  return 'db;dur=53, app;dur=47.2'\n})\n\nconst { createHash } = require('crypto')\n// trailer function also recieve two argument\n// @param {object} reply fastify reply\n// @param {string|Buffer|null} payload payload that already sent, note that it will be null when stream is sent\nreply.trailer('content-md5', function(reply, payload) {\n  const hash = createHash('md5')\n  hash.update(payload)\n  return hash.disgest('hex')\n})\n")),(0,r.kt)("h3",{id:"hastrailerkey"},".hasTrailer(key)"),(0,r.kt)("a",{id:"hasTrailer"}),(0,r.kt)("p",null,"Returns a boolean indicating if the specified trailer has been set."),(0,r.kt)("h3",{id:"removetrailerkey"},".removeTrailer(key)"),(0,r.kt)("a",{id:"removeTrailer"}),(0,r.kt)("p",null,"Remove the value of a previously set trailer."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.trailer('server-timing', function() {\n  return 'db;dur=53, app;dur=47.2'\n})\nreply.removeTrailer('server-timing')\nreply.getTrailer('server-timing') // undefined\n")),(0,r.kt)("h3",{id:"redirectcode--dest"},".redirect(","[code ,]"," dest)"),(0,r.kt)("a",{id:"redirect"}),(0,r.kt)("p",null,"Redirects a request to the specified URL, the status code is optional, default\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"302")," (if status code is not already set by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"code"),")."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: the input URL must be properly encoded using\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI"},(0,r.kt)("inlineCode",{parentName:"a"},"encodeURI")),"\nor similar modules such as\n",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/encodeurl"},(0,r.kt)("inlineCode",{parentName:"a"},"encodeurl")),". Invalid URLs will\nresult in a 500 ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeError")," response.")),(0,r.kt)("p",null,"Example (no ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.code()")," call) sets status code to ",(0,r.kt)("inlineCode",{parentName:"p"},"302")," and redirects to\n",(0,r.kt)("inlineCode",{parentName:"p"},"/home")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.redirect('/home')\n")),(0,r.kt)("p",null,"Example (no ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.code()")," call) sets status code to ",(0,r.kt)("inlineCode",{parentName:"p"},"303")," and redirects to\n",(0,r.kt)("inlineCode",{parentName:"p"},"/home")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.redirect(303, '/home')\n")),(0,r.kt)("p",null,"Example (",(0,r.kt)("inlineCode",{parentName:"p"},"reply.code()")," call) sets status code to ",(0,r.kt)("inlineCode",{parentName:"p"},"303")," and redirects to ",(0,r.kt)("inlineCode",{parentName:"p"},"/home")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.code(303).redirect('/home')\n")),(0,r.kt)("p",null,"Example (",(0,r.kt)("inlineCode",{parentName:"p"},"reply.code()")," call) sets status code to ",(0,r.kt)("inlineCode",{parentName:"p"},"302")," and redirects to ",(0,r.kt)("inlineCode",{parentName:"p"},"/home")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.code(303).redirect(302, '/home')\n")),(0,r.kt)("h3",{id:"callnotfound"},".callNotFound()"),(0,r.kt)("a",{id:"call-not-found"}),(0,r.kt)("p",null,"Invokes the custom not found handler. Note that it will only call ",(0,r.kt)("inlineCode",{parentName:"p"},"preHandler"),"\nhook specified in ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v4.8.x/Reference/Server#set-not-found-handler"},(0,r.kt)("inlineCode",{parentName:"a"},"setNotFoundHandler")),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.callNotFound()\n")),(0,r.kt)("h3",{id:"getresponsetime"},".getResponseTime()"),(0,r.kt)("a",{id:"getResponseTime"}),(0,r.kt)("p",null,"Invokes the custom response time getter to calculate the amount of time passed\nsince the request was started."),(0,r.kt)("p",null,"Note that unless this function is called in the ",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v4.8.x/Reference/Hooks#onresponse"},(0,r.kt)("inlineCode",{parentName:"a"},"onResponse"),"\nhook")," it will always return ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const milliseconds = reply.getResponseTime()\n")),(0,r.kt)("h3",{id:"typecontenttype"},".type(contentType)"),(0,r.kt)("a",{id:"type"}),(0,r.kt)("p",null,"Sets the content type for the response. This is a shortcut for\n",(0,r.kt)("inlineCode",{parentName:"p"},"reply.header('Content-Type', 'the/type')"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply.type('text/html')\n")),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," has a JSON subtype, and the charset parameter is not set,\n",(0,r.kt)("inlineCode",{parentName:"p"},"utf-8")," will be used as the charset by default."),(0,r.kt)("h3",{id:"getserializationfunctionschema--httpstatus"},".getSerializationFunction(schema | httpStatus)"),(0,r.kt)("a",{id:"getserializationfunction"}),(0,r.kt)("p",null,"By calling this function using a provided ",(0,r.kt)("inlineCode",{parentName:"p"},"schema")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"httpStatus"),",\nit will return a ",(0,r.kt)("inlineCode",{parentName:"p"},"serialzation")," function that can be used to\nserialize diverse inputs. It returns ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if no\nserialization function was found using either of the provided inputs."),(0,r.kt)("p",null,"This heavily depends of the ",(0,r.kt)("inlineCode",{parentName:"p"},"schema#responses")," attached to the route, or\nthe serialization functions compiled by using ",(0,r.kt)("inlineCode",{parentName:"p"},"compileSerializationSchema"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const serialize = reply\n                  .getSerializationFunction({\n                    type: 'object', \n                    properties: { \n                      foo: { \n                        type: 'string' \n                      } \n                    } \n                  })\nserialize({ foo: 'bar' }) // '{\"foo\":\"bar\"}'\n\n// or\n\nconst serialize = reply\n                  .getSerializationFunction(200)\nserialize({ foo: 'bar' }) // '{\"foo\":\"bar\"}'\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#compileserializationschema"},".compileSerializationSchema(schema, [httpStatus])"),"\nfor more information on how to compile serialization schemas."),(0,r.kt)("h3",{id:"compileserializationschemaschema-httpstatus"},".compileSerializationSchema(schema, httpStatus)"),(0,r.kt)("a",{id:"compileserializationschema"}),(0,r.kt)("p",null,"This function will compile a serialization schema and\nreturn a function that can be used to serialize data.\nThe function returned (a.k.a. ",(0,r.kt)("em",{parentName:"p"},"serialization function"),") returned is compiled\nby using the provided ",(0,r.kt)("inlineCode",{parentName:"p"},"SerializerCompiler"),". Also this is cached by using\na ",(0,r.kt)("inlineCode",{parentName:"p"},"WeakMap")," for reducing compilation calls."),(0,r.kt)("p",null,"The optional paramater ",(0,r.kt)("inlineCode",{parentName:"p"},"httpStatus"),", if provided, is forwarded directly\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"SerializerCompiler"),", so it can be used to compile the serialization\nfunction if a custom ",(0,r.kt)("inlineCode",{parentName:"p"},"SerializerCompiler")," is used."),(0,r.kt)("p",null,"This heavily depends of the ",(0,r.kt)("inlineCode",{parentName:"p"},"schema#responses")," attached to the route, or\nthe serialization functions compiled by using ",(0,r.kt)("inlineCode",{parentName:"p"},"compileSerializationSchema"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const serialize = reply\n                  .compileSerializationSchema({\n                    type: 'object', \n                    properties: { \n                      foo: { \n                        type: 'string' \n                      } \n                    } \n                  })\nserialize({ foo: 'bar' }) // '{\"foo\":\"bar\"}'\n\n// or\n\nconst serialize = reply\n                  .compileSerializationSchema({\n                    type: 'object', \n                    properties: { \n                      foo: { \n                        type: 'string' \n                      } \n                    } \n                  }, 200)\nserialize({ foo: 'bar' }) // '{\"foo\":\"bar\"}'\n")),(0,r.kt)("p",null,"Note that you should be careful when using this function, as it will cache\nthe compiled serialization functions based on the schema provided. If the\nschemas provided is mutated or changed, the serialization functions will not\ndetect that the schema has been altered and for instance it will reuse the\npreviously compiled serialization function based on the reference of the schema\npreviously provided."),(0,r.kt)("p",null,"If there's a need to change the properties of a schema, always opt to create\na totally new object, otherwise the implementation won't benefit from the cache\nmechanism."),(0,r.kt)("p",null,":Using the following schema as example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const schema1 = {\n  type: 'object',\n  properties: {\n    foo: {\n      type: 'string'\n    }\n  }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Not")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const serialize = reply.compileSerializationSchema(schema1)\n\n// Later on...\nschema1.properties.foo.type. = 'integer'\nconst newSerialize = reply.compileSerializationSchema(schema1)\n\nconsole.log(newSerialize === serialize) // true\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Instead")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const serialize = reply.compileSerializationSchema(schema1)\n\n// Later on...\nconst newSchema = Object.assign({}, schema1)\nnewSchema.properties.foo.type = 'integer'\n\nconst newSerialize = reply.compileSerializationSchema(newSchema)\n\nconsole.log(newSerialize === serialize) // false\n")),(0,r.kt)("h3",{id:"serializeinputdata-schema--httpstatus-httpstatus"},".serializeInput(data, ","[schema | httpStatus]",", ","[httpStatus]",")"),(0,r.kt)("a",{id:"serializeinput"}),(0,r.kt)("p",null,"This function will serialize the input data based on the provided schema,\nor http status code. If both provided, the ",(0,r.kt)("inlineCode",{parentName:"p"},"httpStatus")," will take presedence."),(0,r.kt)("p",null,"If there is not a serialization function for a given ",(0,r.kt)("inlineCode",{parentName:"p"},"schema"),", a new serialization\nfunction will be compiled forwarding the ",(0,r.kt)("inlineCode",{parentName:"p"},"httpStatus")," if provided."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply\n  .serializeInput({ foo: 'bar'}, {  \n    type: 'object', \n    properties: { \n      foo: { \n        type: 'string' \n      } \n    } \n  }) // '{\"foo\":\"bar\"}'\n\n// or\n\nreply\n  .serializeInput({ foo: 'bar'}, {\n    type: 'object', \n    properties: { \n      foo: { \n        type: 'string' \n      } \n    } \n  }, 200) // '{\"foo\":\"bar\"}'\n\n// or\n\nreply\n  .serializeInput({ foo: 'bar'}, 200) // '{\"foo\":\"bar\"}'\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#compileserializationschema"},".compileSerializationSchema(schema, [httpStatus])"),"\nfor more information on how to compile serialization schemas."),(0,r.kt)("h3",{id:"serializerfunc"},".serializer(func)"),(0,r.kt)("a",{id:"serializer"}),(0,r.kt)("p",null,"By default, ",(0,r.kt)("inlineCode",{parentName:"p"},".send()")," will JSON-serialize any value that is not one of ",(0,r.kt)("inlineCode",{parentName:"p"},"Buffer"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"Error"),". If you need to replace the default\nserializer with a custom serializer for a particular request, you can do so with\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},".serializer()")," utility. Be aware that if you are using a custom serializer,\nyou must set a custom ",(0,r.kt)("inlineCode",{parentName:"p"},"'Content-Type'")," header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply\n  .header('Content-Type', 'application/x-protobuf')\n  .serializer(protoBuf.serialize)\n")),(0,r.kt)("p",null,"Note that you don't need to use this utility inside a ",(0,r.kt)("inlineCode",{parentName:"p"},"handler")," because Buffers,\nstreams, and strings (unless a serializer is set) are considered to already be\nserialized."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reply\n  .header('Content-Type', 'application/x-protobuf')\n  .send(protoBuf.serialize(data))\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#send"},(0,r.kt)("inlineCode",{parentName:"a"},".send()"))," for more information on sending different types of\nvalues."),(0,r.kt)("h3",{id:"raw"},".raw"),(0,r.kt)("a",{id:"raw"}),(0,r.kt)("p",null,"This is the\n",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v14.x/docs/api/http.html#http_class_http_serverresponse"},(0,r.kt)("inlineCode",{parentName:"a"},"http.ServerResponse")),"\nfrom Node core. Whilst you are using the Fastify ",(0,r.kt)("inlineCode",{parentName:"p"},"Reply")," object, the use of\n",(0,r.kt)("inlineCode",{parentName:"p"},"Reply.raw")," functions is at your own risk as you are skipping all the Fastify\nlogic of handling the HTTP response. e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"app.get('/cookie-2', (req, reply) => {\n  reply.setCookie('session', 'value', { secure: false }) // this will not be used\n\n  // in this case we are using only the nodejs http server response object\n  reply.raw.writeHead(200, { 'Content-Type': 'text/plain' })\n  reply.raw.write('ok')\n  reply.raw.end()\n})\n")),(0,r.kt)("p",null,"Another example of the misuse of ",(0,r.kt)("inlineCode",{parentName:"p"},"Reply.raw")," is explained in\n",(0,r.kt)("a",{parentName:"p",href:"#getheaders"},"Reply"),"."),(0,r.kt)("h3",{id:"sent"},".sent"),(0,r.kt)("a",{id:"sent"}),(0,r.kt)("p",null,"As the name suggests, ",(0,r.kt)("inlineCode",{parentName:"p"},".sent")," is a property to indicate if a response has been\nsent via ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.send()"),". It will also be ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," in case ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.hijack()")," was\nused."),(0,r.kt)("p",null,"In case a route handler is defined as an async function or it returns a promise,\nit is possible to call ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.hijack()")," to indicate that the automatic\ninvocation of ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.send()")," once the handler promise resolve should be skipped.\nBy calling ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.hijack()"),", an application claims full responsibility for the\nlow-level request and response. Moreover, hooks will not be invoked."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Modifying the ",(0,r.kt)("inlineCode",{parentName:"em"},".sent")," property directly is deprecated. Please use the\naforementioned ",(0,r.kt)("inlineCode",{parentName:"em"},".hijack()")," method to achieve the same effect.")),(0,r.kt)("a",{name:"hijack"}),"### .hijack() Sometimes you might need to halt the execution of the normal request lifecycle and handle sending the response manually.",(0,r.kt)("p",null,"To achieve this, Fastify provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.hijack()")," method that can be called\nduring the request lifecycle (At any point before ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.send()")," is called), and\nallows you to prevent Fastify from sending the response, and from running the\nremaining hooks (and user handler if the reply was hijacked before)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"app.get('/', (req, reply) => {\n  reply.hijack()\n  reply.raw.end('hello world')\n\n  return Promise.resolve('this will be skipped')\n})\n")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.raw")," is used to send a response back to the user, the ",(0,r.kt)("inlineCode",{parentName:"p"},"onResponse"),"\nhooks will still be executed."),(0,r.kt)("h3",{id:"senddata"},".send(data)"),(0,r.kt)("a",{id:"send"}),(0,r.kt)("p",null,"As the name suggests, ",(0,r.kt)("inlineCode",{parentName:"p"},".send()")," is the function that sends the payload to the\nend user."),(0,r.kt)("h4",{id:"objects"},"Objects"),(0,r.kt)("a",{id:"send-object"}),(0,r.kt)("p",null,"As noted above, if you are sending JSON objects, ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," will serialize the\nobject with\n",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/fast-json-stringify"},"fast-json-stringify")," if you\nset an output schema, otherwise, ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON.stringify()")," will be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/json', options, function (request, reply) {\n  reply.send({ hello: 'world' })\n})\n")),(0,r.kt)("h4",{id:"strings"},"Strings"),(0,r.kt)("a",{id:"send-string"}),(0,r.kt)("p",null,"If you pass a string to ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," without a ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type"),", it will be sent as\n",(0,r.kt)("inlineCode",{parentName:"p"},"text/plain; charset=utf-8"),". If you set the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," header and pass a\nstring to ",(0,r.kt)("inlineCode",{parentName:"p"},"send"),", it will be serialized with the custom serializer if one is\nset, otherwise, it will be sent unmodified (unless the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," header is\nset to ",(0,r.kt)("inlineCode",{parentName:"p"},"application/json; charset=utf-8"),", in which case it will be\nJSON-serialized like an object \u2014 see the section above)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/json', options, function (request, reply) {\n  reply.send('plain string')\n})\n")),(0,r.kt)("h4",{id:"streams"},"Streams"),(0,r.kt)("a",{id:"send-streams"}),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"send")," can also handle streams out of the box. If you are sending a stream and\nyou have not set a ",(0,r.kt)("inlineCode",{parentName:"p"},"'Content-Type'")," header, ",(0,r.kt)("em",{parentName:"p"},"send")," will set it at\n",(0,r.kt)("inlineCode",{parentName:"p"},"'application/octet-stream'"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/streams', function (request, reply) {\n  const fs = require('fs')\n  const stream = fs.createReadStream('some-file', 'utf8')\n  reply.send(stream)\n})\n")),(0,r.kt)("h4",{id:"buffers"},"Buffers"),(0,r.kt)("a",{id:"send-buffers"}),(0,r.kt)("p",null,"If you are sending a buffer and you have not set a ",(0,r.kt)("inlineCode",{parentName:"p"},"'Content-Type'")," header,\n",(0,r.kt)("em",{parentName:"p"},"send")," will set it to ",(0,r.kt)("inlineCode",{parentName:"p"},"'application/octet-stream'"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs')\nfastify.get('/streams', function (request, reply) {\n  fs.readFile('some-file', (err, fileBuffer) => {\n    reply.send(err || fileBuffer)\n  })\n})\n")),(0,r.kt)("h4",{id:"errors"},"Errors"),(0,r.kt)("a",{id:"errors"}),(0,r.kt)("p",null,"If you pass to ",(0,r.kt)("em",{parentName:"p"},"send")," an object that is an instance of ",(0,r.kt)("em",{parentName:"p"},"Error"),", Fastify will\nautomatically create an error structured as the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  error: String        // the HTTP error message\n  code: String         // the Fastify error code\n  message: String      // the user error message\n  statusCode: Number   // the HTTP status code\n}\n")),(0,r.kt)("p",null,"You can add custom properties to the Error object, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"headers"),", that will\nbe used to enhance the HTTP response."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: If you are passing an error to ",(0,r.kt)("inlineCode",{parentName:"em"},"send")," and the statusCode is less than\n400, Fastify will automatically set it at 500.")),(0,r.kt)("p",null,"Tip: you can simplify errors by using the\n",(0,r.kt)("a",{parentName:"p",href:"https://npm.im/http-errors"},(0,r.kt)("inlineCode",{parentName:"a"},"http-errors"))," module or\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fastify/fastify-sensible"},(0,r.kt)("inlineCode",{parentName:"a"},"@fastify/sensible"))," plugin to\ngenerate errors:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/', function (request, reply) {\n  reply.send(httpErrors.Gone())\n})\n")),(0,r.kt)("p",null,"To customize the JSON error output you can do it by:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"setting a response JSON schema for the status code you need"),(0,r.kt)("li",{parentName:"ul"},"add the additional properties to the ",(0,r.kt)("inlineCode",{parentName:"li"},"Error")," instance")),(0,r.kt)("p",null,"Notice that if the returned status code is not in the response schema list, the\ndefault behaviour will be applied."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/', {\n  schema: {\n    response: {\n      501: {\n        type: 'object',\n        properties: {\n          statusCode: { type: 'number' },\n          code: { type: 'string' },\n          error: { type: 'string' },\n          message: { type: 'string' },\n          time: { type: 'string' }\n        }\n      }\n    }\n  }\n}, function (request, reply) {\n  const error = new Error('This endpoint has not been implemented')\n  error.time = 'it will be implemented in two weeks'\n  reply.code(501).send(error)\n})\n")),(0,r.kt)("p",null,"If you want to customize error handling, check out\n",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v4.8.x/Reference/Server#seterrorhandler"},(0,r.kt)("inlineCode",{parentName:"a"},"setErrorHandler"))," API."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: you are responsible for logging when customizing the error handler")),(0,r.kt)("p",null,"API:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.setErrorHandler(function (error, request, reply) {\n  request.log.warn(error)\n  var statusCode = error.statusCode >= 400 ? error.statusCode : 500\n  reply\n    .code(statusCode)\n    .type('text/plain')\n    .send(statusCode >= 500 ? 'Internal server error' : error.message)\n})\n")),(0,r.kt)("p",null,"The not found errors generated by the router will use the\n",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v4.8.x/Reference/Server#setnotfoundhandler"},(0,r.kt)("inlineCode",{parentName:"a"},"setNotFoundHandler"))),(0,r.kt)("p",null,"API:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.setNotFoundHandler(function (request, reply) {\n  reply\n    .code(404)\n    .type('text/plain')\n    .send('a custom not found')\n})\n")),(0,r.kt)("h4",{id:"type-of-the-final-payload"},"Type of the final payload"),(0,r.kt)("a",{id:"payload-type"}),(0,r.kt)("p",null,"The type of the sent payload (after serialization and going through any\n",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v4.8.x/Reference/Hooks#onsend"},(0,r.kt)("inlineCode",{parentName:"a"},"onSend")," hooks"),") must be one of the following types,\notherwise, an error will be thrown:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"string")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Buffer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"undefined")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"null"))),(0,r.kt)("h4",{id:"async-await-and-promises"},"Async-Await and Promises"),(0,r.kt)("a",{id:"async-await-promise"}),(0,r.kt)("p",null,"Fastify natively handles promises and supports async-await."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note that in the following examples we are not using reply.send.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { promisify } = require('util')\nconst delay = promisify(setTimeout)\n\nfastify.get('/promises', options, function (request, reply) {\n return delay(200).then(() => { return { hello: 'world' }})\n})\n\nfastify.get('/async-await', options, async function (request, reply) {\n  await delay(200)\n  return { hello: 'world' }\n})\n")),(0,r.kt)("p",null,"Rejected promises default to a ",(0,r.kt)("inlineCode",{parentName:"p"},"500")," HTTP status code. Reject the promise, or\n",(0,r.kt)("inlineCode",{parentName:"p"},"throw")," in an ",(0,r.kt)("inlineCode",{parentName:"p"},"async function"),", with an object that has ",(0,r.kt)("inlineCode",{parentName:"p"},"statusCode")," (or\n",(0,r.kt)("inlineCode",{parentName:"p"},"status"),") and ",(0,r.kt)("inlineCode",{parentName:"p"},"message")," properties to modify the reply."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"fastify.get('/teapot', async function (request, reply) {\n  const err = new Error()\n  err.statusCode = 418\n  err.message = 'short and stout'\n  throw err\n})\n\nfastify.get('/botnet', async function (request, reply) {\n  throw { statusCode: 418, message: 'short and stout' }\n  // will return to the client the same json\n})\n")),(0,r.kt)("p",null,"If you want to know more please review\n",(0,r.kt)("a",{parentName:"p",href:"/website-next/docs/v4.8.x/Reference/Routes#async-await"},"Routes#async-await"),"."),(0,r.kt)("h3",{id:"thenfulfilled-rejected"},".then(fulfilled, rejected)"),(0,r.kt)("a",{id:"then"}),(0,r.kt)("p",null,"As the name suggests, a ",(0,r.kt)("inlineCode",{parentName:"p"},"Reply")," object can be awaited upon, i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"await reply"),"\nwill wait until the reply is sent. The ",(0,r.kt)("inlineCode",{parentName:"p"},"await")," syntax calls the ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.then()"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"reply.then(fulfilled, rejected)")," accepts two parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fulfilled")," will be called when a response has been fully sent,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rejected")," will be called if the underlying stream had an error, e.g. the\nsocket has been destroyed.")),(0,r.kt)("p",null,"For more details, see:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/fastify/fastify/issues/1864"},"https://github.com/fastify/fastify/issues/1864")," for the discussion about this\nfeature"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://promisesaplus.com/"},"https://promisesaplus.com/")," for the definition of thenables"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"),"\nfor the signature")))}u.isMDXComponent=!0}}]);